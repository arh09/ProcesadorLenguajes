lexer grammar Analex;

BLANCO: ' ' ->skip;
TABULADOR: '\t'->skip;
FIN_LINEA: '\r'?'\n' ->skip;

fragment DIGITO: [0-9];
fragment LETRA:[a-z];

VARIABLES:'VARIABLES';
FUNCION:'FUNCION';
PROCEDIMIENTO:'PROCEDIMIENTO';
INSTRUCCIONES:'INSTRUCCIONES';
VAR: LETRA(LETRA|DIGITO)*;
NUMERO:('-')?(DIGITO)+;
DOS_PUNTOS: ':';
PARENTESIS_ABIERTO : '(';
PARENTESIS_CERRADO : ')';
PyC: ';';
COMA: ',';
NUM:'NUM';
LOG:'LOG';
SEQ:'SEQ';
DEV:'DEV';
MAYOR:'MAYOR';
MENOR:'MENOR';
MAYOR_QUE:'MAYOR_QUE_'(LETRA|DIGITO)+;
MENOR_QUE:'MENOR_QUE_'(LETRA|DIGITO)+;
SUMA: '+';
RESTA: '-';
MULT: '*';
DIV:'/';
IGUAL:'=';
SI:'SI';
FSI:'FSI';
MAYORQ:'>=';
MENORQ:'<=';
MAY:'>';
MEN:'<';
DISTINTO:'!=';
IGUALDAD:'==';
AND:'&&';
OR:'||';
NEGACION:'!';
ENTONCES:'ENTONCES';
CORCHETE_ABIERTO:'[';
CORCHETE_CERRADO:']';
SINO:'SINO';
MIENTRAS:'MIENTRAS';
HACER:'HACER';
FMIENTRAS:'FMIENTRAS';
RUPTURA:'RUPTURA';
VACIA: 'VACIA';
ULTIMAPOSICION: 'ULTIMAPOSICION';
COMENTARIO_BLOQUE : '/*' .*? '*/' -> skip ;
COMENTARIO_LINEA : '//' .*? FIN_LINEA -> skip ;
